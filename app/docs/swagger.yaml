basePath: /
definitions:
  helpers.ErrorDto:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.AddJobDto:
    properties:
      taskid:
        minimum: 0
        type: integer
      userid:
        minimum: 0
        type: integer
    required:
    - taskid
    - userid
    type: object
  models.CreateTaskDto:
    properties:
      name:
        minLength: 3
        type: string
    required:
    - name
    type: object
  models.PassportNumberDto:
    properties:
      passportNumber:
        example: 1234 123456
        type: string
    required:
    - passportNumber
    type: object
  models.ShowUserDto:
    properties:
      address:
        example: г. Екатеринбург, ул. Берии, д. 7, кв. 3
        type: string
      jobs:
        items:
          $ref: '#/definitions/models.ShowUserTaskDto'
        type: array
      name:
        example: Иван
        type: string
      passport_number:
        example: 1234 123456
        type: string
      patronymic:
        example: Иванович
        type: string
      surname:
        example: Иванов
        type: string
      total_work:
        example: 1h 1m
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  models.ShowUserTaskDto:
    properties:
      task_id:
        example: 1
        type: integer
      task_name:
        example: Idle
        type: string
      time_on_task:
        example: 1h 1m
        type: string
    type: object
  models.Task:
    properties:
      id:
        minimum: 0
        type: integer
      name:
        minLength: 3
        type: string
    type: object
  models.UpdateUserDto:
    properties:
      address:
        example: г. Екатеринбург, ул. Берии, д. 7, кв. 3
        minLength: 28
        type: string
      name:
        example: Иванов
        minLength: 5
        type: string
      passportNumber:
        example: 1234 123456
        type: string
      patronymic:
        example: Иванович
        minLength: 3
        type: string
      surname:
        example: Иванов
        minLength: 3
        type: string
    type: object
  models.User:
    properties:
      adress:
        example: г. Екатеринбург, ул. Берии, д. 7, кв. 3
        type: string
      id:
        example: 13
        type: integer
      name:
        example: Иван
        type: string
      passportNumber:
        example: 1234 123456
        type: string
      patronymic:
        example: Иванович
        type: string
      surname:
        example: Иванов
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Test task for Effective Mobile
  title: Task tracker api
  version: "1.0"
paths:
  /jobs:
    post:
      consumes:
      - application/json
      description: Assign user to a task by user id and task id first post starts
        the task and second stops it
      parameters:
      - description: '{'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AddJobDto'
      responses:
        "200":
          description: status OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
      summary: Assign user to a task...
  /jobs/user:
    get:
      description: return list of jobs for user by user id
      parameters:
      - description: User ID
        in: query
        name: id
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: returning Users objects
          schema:
            allOf:
            - $ref: '#/definitions/models.ShowUserDto'
            - properties:
                TotalWorkTime:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
      summary: Get list of jobs for user by user id
  /tasks:
    get:
      description: return list of tasks
      parameters:
      - description: task ID
        in: query
        name: id
        type: integer
      - description: task name
        in: query
        name: name
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: returning Tasks objects
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
      summary: Get list of tasks
    post:
      consumes:
      - application/json
      description: Creates new task
      parameters:
      - description: new task data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateTaskDto'
      produces:
      - application/json
      responses:
        "201":
          description: returning task object
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
      summary: Creates new task
  /tasks/{id}:
    delete:
      description: Deletes task by id
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{Deleted id: id}'
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
      summary: Delete task
  /users:
    get:
      description: return list of users
      parameters:
      - description: User ID
        in: query
        name: id
        type: integer
      - description: User name
        in: query
        name: name
        type: string
      - description: User surname
        in: query
        name: surname
        type: integer
      - description: User patronymic
        in: query
        name: patronymic
        type: string
      - description: User address
        in: query
        name: address
        type: string
      - description: User passpor tnumber
        in: query
        name: passportnumber
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: returning Users objects
          schema:
            items:
              allOf:
              - $ref: '#/definitions/models.ShowUserDto'
              - properties:
                  Jobs:
                    type: object
                type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
      summary: Get list of users
    post:
      consumes:
      - application/json
      description: Creates new user by passport number
      parameters:
      - description: Passport number in xxxx xxxxxx format
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.PassportNumberDto'
      produces:
      - application/json
      responses:
        "201":
          description: returning User object
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
      summary: Creates new user
  /users/{id}:
    delete:
      description: Deletes a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{Deleted id: id}'
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
      summary: Delete a user
    patch:
      consumes:
      - application/json
      description: Updates a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: fields need to be updated
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: returning User object
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorDto'
      summary: Updates a user
swagger: "2.0"
